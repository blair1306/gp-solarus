<dec f='include/SDL2/SDL_filesystem.h' l='126' type='char * SDL_GetPrefPath(const char * org, const char * app)'/>
<doc f='include/SDL2/SDL_filesystem.h' l='65'>/**
 * \brief Get the user-and-app-specific path where files can be written.
 *
 * Get the &quot;pref dir&quot;. This is meant to be where users can write personal
 *  files (preferences and save games, etc) that are specific to your
 *  application. This directory is unique per user, per application.
 *
 * This function will decide the appropriate location in the native filesystem,
 *  create the directory if necessary, and return a string of the absolute
 *  path to the directory in UTF-8 encoding.
 *
 * On Windows, the string might look like:
 *  &quot;C:\\Users\\bob\\AppData\\Roaming\\My Company\\My Program Name\\&quot;
 *
 * On Linux, the string might look like:
 *  &quot;/home/bob/.local/share/My Program Name/&quot;
 *
 * On Mac OS X, the string might look like:
 *  &quot;/Users/bob/Library/Application Support/My Program Name/&quot;
 *
 * (etc.)
 *
 * You specify the name of your organization (if it&apos;s not a real organization,
 *  your name or an Internet domain you own might do) and the name of your
 *  application. These should be untranslated proper names.
 *
 * Both the org and app strings may become part of a directory name, so
 *  please follow these rules:
 *
 *    - Try to use the same org string (including case-sensitivity) for
 *      all your applications that use this function.
 *    - Always use a unique app string for each one, and make sure it never
 *      changes for an app once you&apos;ve decided on it.
 *    - Unicode characters are legal, as long as it&apos;s UTF-8 encoded, but...
 *    - ...only use letters, numbers, and spaces. Avoid punctuation like
 *      &quot;Game Name 2: Bad Guy&apos;s Revenge!&quot; ... &quot;Game Name 2&quot; is sufficient.
 *
 * This returns an absolute path in UTF-8 encoding, and is guaranteed to
 *  end with a path separator (&apos;\\&apos; on Windows, &apos;/&apos; most other places).
 *
 * The pointer returned by this function is owned by you. Please call
 *  SDL_free() on the pointer when you are done with it, or it will be a
 *  memory leak. This is not necessarily a fast call, though, so you should
 *  call this once near startup and save the string if you need it.
 *
 * You should assume the path returned by this function is the only safe
 *  place to write files (and that SDL_GetBasePath(), while it might be
 *  writable, or even the parent of the returned path, aren&apos;t where you
 *  should be writing things).
 *
 * Some platforms can&apos;t determine the pref path, and on other
 *  platforms, this might be meaningless. In such cases, this function will
 *  return NULL.
 *
 *   \param org The name of your organization.
 *   \param app The name of your application.
 *  \return UTF-8 string of user dir in platform-dependent notation. NULL
 *          if there&apos;s a problem (creating directory failed, etc).
 *
 * \sa SDL_GetBasePath
 */</doc>
