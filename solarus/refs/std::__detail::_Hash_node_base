<def f='include/c++/4.9/bits/hashtable_policy.h' l='230' ll='237'/>
<ovr f='include/c++/4.9/bits/hashtable_policy.h' l='245' c='std::__detail::_Hash_node_value_base'/>
<size>8</size>
<doc f='include/c++/4.9/bits/hashtable_policy.h' l='222'>/**
   *  struct _Hash_node_base
   *
   *  Nodes, used to wrap elements stored in the hash table.  A policy
   *  template parameter of class template _Hashtable controls whether
   *  nodes also store a hash code. In some cases (e.g. strings) this
   *  may be a performance win.
   */</doc>
<mbr r='std::__detail::_Hash_node_base::_M_nxt' o='0' t='std::__detail::_Hash_node_base *'/>
<fun r='_ZNSt8__detail15_Hash_node_baseC1Ev'/>
<fun r='_ZNSt8__detail15_Hash_node_baseC1EPS0_'/>
