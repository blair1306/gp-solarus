<dec f='include/c++/4.9/new' l='128' type='void * operator new(std::size_t )'/>
<use f='include/c++/4.9/ext/new_allocator.h' l='104' u='c' c='__gnu_cxx::new_allocator::allocate'/>
<doc f='include/c++/4.9/new' l='118'>/** These are replaceable signatures:
 *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 *  - normal array new and delete (same)
 *  - @c nothrow single new and delete (take a @c nothrow argument, return
 *    @c NULL on error)
 *  - @c nothrow array new and delete (same)
 *
 *  Placement new and delete signatures (take a memory address argument,
 *  does nothing) may not be replaced by a user&apos;s program.
*/</doc>
<use f='include/x86_64-linux-gnu/qt5/QtCore/qsharedpointer_impl.h' l='227' u='c' c='_ZN15QtSharedPointer33ExternalRefCountWithCustomDeleter6createEPT_T0_PFvPNS_20ExternalRefCountDataEE'/>
<use f='include/x86_64-linux-gnu/qt5/QtCore/qsharedpointer_impl.h' l='267' u='c' c='_ZN15QtSharedPointer34ExternalRefCountWithContiguousData6createEPPT_PFvPNS_20ExternalRefCountDataEE'/>
