<dec f='codebrowser/include/solarus/hero/PlayerMovementState.h' l='45' type='void Solarus::Hero::PlayerMovementState::start(const Solarus::Entity::State * previous_state)'/>
<ovr f='codebrowser/src/hero/CarryingState.cpp' l='47' c='_ZN7Solarus4Hero13CarryingState5startEPKNS_6Entity5StateE'/>
<use f='codebrowser/src/hero/CarryingState.cpp' l='49' u='c' c='_ZN7Solarus4Hero13CarryingState5startEPKNS_6Entity5StateE'/>
<ovr f='codebrowser/src/hero/FreeState.cpp' l='44' c='_ZN7Solarus4Hero9FreeState5startEPKNS_6Entity5StateE'/>
<use f='codebrowser/src/hero/FreeState.cpp' l='46' u='c' c='_ZN7Solarus4Hero9FreeState5startEPKNS_6Entity5StateE'/>
<inh f='codebrowser/include/solarus/entities/EntityState.h' l='44' c='_ZN7Solarus6Entity5State5startEPKS1_'/>
<def f='codebrowser/src/hero/PlayerMovementState.cpp' l='80' ll='101' type='void Solarus::Hero::PlayerMovementState::start(const Solarus::Entity::State * previous_state)'/>
<doc f='codebrowser/src/hero/PlayerMovementState.cpp' l='72'>/**
 * \brief Starts this state.
 *
 * This function is called automatically when this state becomes the active
 * state of the hero.
 *
 * \param previous_state The previous state (for information).
 */</doc>
<ovr f='codebrowser/src/hero/SwimmingState.cpp' l='42' c='_ZN7Solarus4Hero13SwimmingState5startEPKNS_6Entity5StateE'/>
<use f='codebrowser/src/hero/SwimmingState.cpp' l='44' u='c' c='_ZN7Solarus4Hero13SwimmingState5startEPKNS_6Entity5StateE'/>
<ovr f='codebrowser/src/hero/SwordLoadingState.cpp' l='50' c='_ZN7Solarus4Hero17SwordLoadingState5startEPKNS_6Entity5StateE'/>
<use f='codebrowser/src/hero/SwordLoadingState.cpp' l='52' u='c' c='_ZN7Solarus4Hero17SwordLoadingState5startEPKNS_6Entity5StateE'/>
