<dec f='include/c++/4.9/bits/stl_list.h' l='1239' type='iterator std::list::erase(const_iterator __position)'/>
<def f='include/c++/4.9/bits/list.tcc' l='144' ll='156' type='typename list&lt;_Tp, _Alloc&gt;::iterator std::list::erase(const_iterator __position)'/>
<doc f='include/c++/4.9/bits/stl_list.h' l='1222'>/**
       *  @brief  Remove element at given position.
       *  @param  __position  Iterator pointing to element to be erased.
       *  @return  An iterator pointing to the next element (or end()).
       *
       *  This function will erase the element at the given position and thus
       *  shorten the %list by one.
       *
       *  Due to the nature of a %list this operation can be done in
       *  constant time, and only invalidates iterators/references to
       *  the element being removed.  The user is also cautioned that
       *  this function only erases the element, and that if the element
       *  is itself a pointer, the pointed-to memory is not touched in
       *  any way.  Managing the pointer is the user&apos;s responsibility.
       */</doc>
<use f='codebrowser/src/lua/MenuApi.cpp' l='170' u='c' c='_ZN7Solarus10LuaContext12update_menusEv'/>
