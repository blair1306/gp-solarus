<dec f='include/c++/4.9/bits/stl_list.h' l='1475' type='void std::list::remove(const _Tp &amp; __value)'/>
<def f='include/c++/4.9/bits/list.tcc' l='278' ll='304' type='void std::list::remove(const value_type &amp; __value)'/>
<doc f='include/c++/4.9/bits/stl_list.h' l='1463'>/**
       *  @brief  Remove all elements equal to value.
       *  @param  __value  The value to remove.
       *
       *  Removes every element in the list equal to @a value.
       *  Remaining elements stay in list order.  Note that this
       *  function only erases the elements, and that if the elements
       *  themselves are pointers, the pointed-to memory is not
       *  touched in any way.  Managing the pointer is the user&apos;s
       *  responsibility.
       */</doc>
<use f='codebrowser/src/entities/Entities.cpp' l='1118' u='c' c='_ZN7Solarus8Entities22remove_marked_entitiesEv'/>
<use f='codebrowser/src/lowlevel/Sound.cpp' l='168' u='c' c='_ZN7Solarus5SoundD1Ev'/>
<use f='codebrowser/src/lowlevel/Sound.cpp' l='337' u='c' c='_ZN7Solarus5Sound6updateEv'/>
<use f='codebrowser/src/lowlevel/Sound.cpp' l='421' u='c' c='_ZN7Solarus5Sound5startEv'/>
