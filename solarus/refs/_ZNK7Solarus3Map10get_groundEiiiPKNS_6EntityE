<dec f='codebrowser/include/solarus/Map.h' l='149' type='Solarus::Ground Solarus::Map::get_ground(int layer, int x, int y, const Solarus::Entity * entity_to_check) const'/>
<use f='codebrowser/src/Map.cpp' l='789' u='c' c='_ZNK7Solarus3Map26test_collision_with_groundEiiiRKNS_6EntityERb'/>
<use f='codebrowser/src/Map.cpp' l='1020' u='c' c='_ZNK7Solarus3Map16has_empty_groundEiRKNS_9RectangleE'/>
<use f='codebrowser/src/Map.cpp' l='1021' u='c' c='_ZNK7Solarus3Map16has_empty_groundEiRKNS_9RectangleE'/>
<use f='codebrowser/src/Map.cpp' l='1025' u='c' c='_ZNK7Solarus3Map16has_empty_groundEiRKNS_9RectangleE'/>
<use f='codebrowser/src/Map.cpp' l='1026' u='c' c='_ZNK7Solarus3Map16has_empty_groundEiRKNS_9RectangleE'/>
<def f='codebrowser/src/Map.cpp' l='1052' ll='1059' type='Solarus::Ground Solarus::Map::get_ground(int layer, int x, int y, const Solarus::Entity * entity_to_check) const'/>
<doc f='codebrowser/src/Map.cpp' l='1033'>/**
 * \brief Returns the ground at the specified point.
 *
 * Static tiles and dynamic entities are all taken into account here.
 *
 * When an entity has a diagonal ground, only 8x8 squares on the diagonal of
 * that entity are diagonal grounds, other ones are resolved Ground::WALL on a
 * side and Ground::TRAVERSABLE or Ground::DEEP_WATER on the other side.
 *
 * A current limitation is that entities with diagonal grounds must be aligned
 * to the 8x8 grid to work correctly.
 *
 * \param layer Layer of the point.
 * \param x X coordinate of the point.
 * \param y Y coordinate of the point.
 * \param entity_to_check The entity you want to know the ground of (if any).
 * Used to make sure that the entity&apos;s own modified ground does not count.
 * \return The ground at this place.
 */</doc>
<use f='codebrowser/src/entities/Enemy.cpp' l='356' u='c' c='_ZNK7Solarus5Enemy22is_deep_water_obstacleEv'/>
<use f='codebrowser/src/entities/Enemy.cpp' l='357' u='c' c='_ZNK7Solarus5Enemy22is_deep_water_obstacleEv'/>
<use f='codebrowser/src/entities/Enemy.cpp' l='358' u='c' c='_ZNK7Solarus5Enemy22is_deep_water_obstacleEv'/>
<use f='codebrowser/src/entities/Enemy.cpp' l='359' u='c' c='_ZNK7Solarus5Enemy22is_deep_water_obstacleEv'/>
<use f='codebrowser/src/entities/Enemy.cpp' l='391' u='c' c='_ZNK7Solarus5Enemy16is_hole_obstacleEv'/>
<use f='codebrowser/src/entities/Enemy.cpp' l='392' u='c' c='_ZNK7Solarus5Enemy16is_hole_obstacleEv'/>
<use f='codebrowser/src/entities/Enemy.cpp' l='393' u='c' c='_ZNK7Solarus5Enemy16is_hole_obstacleEv'/>
<use f='codebrowser/src/entities/Enemy.cpp' l='394' u='c' c='_ZNK7Solarus5Enemy16is_hole_obstacleEv'/>
<use f='codebrowser/src/entities/Enemy.cpp' l='426' u='c' c='_ZNK7Solarus5Enemy16is_lava_obstacleEv'/>
<use f='codebrowser/src/entities/Enemy.cpp' l='427' u='c' c='_ZNK7Solarus5Enemy16is_lava_obstacleEv'/>
<use f='codebrowser/src/entities/Enemy.cpp' l='428' u='c' c='_ZNK7Solarus5Enemy16is_lava_obstacleEv'/>
<use f='codebrowser/src/entities/Enemy.cpp' l='429' u='c' c='_ZNK7Solarus5Enemy16is_lava_obstacleEv'/>
<use f='codebrowser/src/entities/Hero.cpp' l='587' u='c' c='_ZN7Solarus4Hero20place_on_destinationERNS_3MapERKNS_9RectangleE'/>
<use f='codebrowser/src/entities/Hero.cpp' l='1128' u='c' c='_ZN7Solarus4Hero14check_positionEv'/>
<use f='codebrowser/src/entities/Hero.cpp' l='1129' u='c' c='_ZN7Solarus4Hero14check_positionEv'/>
<use f='codebrowser/src/entities/Hero.cpp' l='1130' u='c' c='_ZN7Solarus4Hero14check_positionEv'/>
<use f='codebrowser/src/entities/Hero.cpp' l='1131' u='c' c='_ZN7Solarus4Hero14check_positionEv'/>
<use f='codebrowser/src/entities/Hero.cpp' l='1134' u='c' c='_ZN7Solarus4Hero14check_positionEv'/>
<use f='codebrowser/src/lua/MapApi.cpp' l='1735' u='c' c='_ZN7Solarus10LuaContext18map_api_get_groundEP9lua_State'/>
