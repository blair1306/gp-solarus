<dec f='codebrowser/include/solarus/entities/Npc.h' l='71' type='void Solarus::Npc::Npc(Solarus::Game &amp; game, const std::string &amp; name, int layer, const Solarus::Point &amp; xy, Solarus::Npc::Subtype subtype, const std::string &amp; sprite_name, int initial_direction, const std::string &amp; behavior_string)'/>
<def f='codebrowser/src/entities/Npc.cpp' l='51' ll='94' type='void Solarus::Npc::Npc(Solarus::Game &amp; , const std::string &amp; name, int layer, const Solarus::Point &amp; xy, Solarus::Npc::Subtype subtype, const std::string &amp; sprite_name, int direction, const std::string &amp; behavior_string)'/>
<doc f='codebrowser/src/entities/Npc.cpp' l='36'>/**
 * \brief Creates an NPC.
 * \param game the game
 * \param name name identifying this NPC
 * \param layer layer of the entity to create
 * \param xy Coordinates of the entity to create.
 * \param subtype the subtype of interaction
 * \param sprite_name sprite animation set of the entity, or an empty string to create no sprite
 * \param direction for a generalized NPC: direction for which the interactions are allowed
 * (0 to 4, or -1 for any direction), for a usual NPC: initial direction of the NPC&apos;s sprite
 * \param behavior_string indicates what happens when the hero interacts with this NPC:
 * &quot;dialog#XXX&quot; to start the dialog XXX, &quot;map&quot; to call the map script
 * (with an event_hero_interaction() call) or &quot;item#XXX&quot; to call the script
 * of item XXX  (with an event_hero_interaction() call)
 */</doc>
