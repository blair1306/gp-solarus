<def f='include/c++/4.9/bits/stl_deque.h' l='1620' ll='1626' type='iterator std::deque::erase(const_iterator __position)'/>
<doc f='include/c++/4.9/bits/stl_deque.h' l='1607'>/**
       *  @brief  Remove element at given position.
       *  @param  __position  Iterator pointing to element to be erased.
       *  @return  An iterator pointing to the next element (or end()).
       *
       *  This function will erase the element at the given position and thus
       *  shorten the %deque by one.
       *
       *  The user is cautioned that
       *  this function only erases the element, and that if the element is
       *  itself a pointer, the pointed-to memory is not touched in any way.
       *  Managing the pointer is the user&apos;s responsibility.
       */</doc>
<use f='codebrowser/src/MapData.cpp' l='371' u='c' c='_ZN7Solarus7MapData16set_entity_layerERKNS_11EntityIndexEi'/>
<use f='codebrowser/src/MapData.cpp' l='415' u='c' c='_ZN7Solarus7MapData16set_entity_orderERKNS_11EntityIndexEi'/>
<use f='codebrowser/src/MapData.cpp' l='772' u='c' c='_ZN7Solarus7MapData13remove_entityERKNS_11EntityIndexE'/>
<use f='codebrowser/src/SpriteData.cpp' l='374' u='c' c='_ZN7Solarus19SpriteAnimationData16remove_directionEi'/>
<use f='codebrowser/src/SpriteData.cpp' l='410' u='c' c='_ZN7Solarus19SpriteAnimationData14move_directionEii'/>
