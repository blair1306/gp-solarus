<dec f='codebrowser/include/solarus/entities/CarriedObject.h' l='50' type='void Solarus::CarriedObject::CarriedObject(Solarus::Hero &amp; hero, const Solarus::Entity &amp; original_entity, const std::string &amp; animation_set_id, const std::string &amp; destruction_sound_id, int damage_on_enemies, uint32_t explosion_date)'/>
<def f='codebrowser/src/entities/CarriedObject.cpp' l='64' ll='113' type='void Solarus::CarriedObject::CarriedObject(Solarus::Hero &amp; hero, const Solarus::Entity &amp; original_entity, const std::string &amp; animation_set_id, const std::string &amp; destruction_sound_id, int damage_on_enemies, uint32_t explosion_date)'/>
<doc f='codebrowser/src/entities/CarriedObject.cpp' l='51'>/**
 * \brief Creates a carried object (i.e. an item carried by the hero).
 * \param hero the hero who is lifting the item to be created
 * \param original_entity the entity that will be replaced by this carried object
 * (its coordinates, size and origin will be copied)
 * \param animation_set_id name of the animation set for the sprite to create
 * \param destruction_sound_id Name of the sound to play when this item is destroyed
 * (or an empty string).
 * \param damage_on_enemies damage received by an enemy if the item is thrown on him
 * (possibly 0)
 * \param explosion_date date of the explosion if the item should explode,
 * or 0 if the item does not explode
 */</doc>
