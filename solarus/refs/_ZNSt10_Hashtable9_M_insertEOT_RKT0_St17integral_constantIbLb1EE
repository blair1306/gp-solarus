<dec f='include/c++/4.9/bits/hashtable.h' l='678' type='std::pair&lt;iterator, bool&gt; std::_Hashtable::_M_insert(_Arg &amp;&amp; , const _NodeGenerator &amp; , std::true_type )'/>
<def f='include/c++/4.9/bits/hashtable.h' l='1702' ll='1725' type='std::pair&lt;typename _Hashtable&lt;_Key, _Value, _Alloc, _ExtractKey, _Equal, _H1, _H2, _Hash, _RehashPolicy, _Traits&gt;::iterator, bool&gt; std::_Hashtable::_M_insert(_Arg &amp;&amp; __v, const _NodeGenerator &amp; __node_gen, std::true_type )'/>
<doc f='include/c++/4.9/bits/hashtable.h' l='1701'>// Insert v if no element with its key is already present.</doc>
