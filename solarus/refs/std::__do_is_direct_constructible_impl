<def f='include/c++/4.9/type_traits' l='898' ll='906'/>
<ovr f='include/c++/4.9/type_traits' l='909' c='std::__is_direct_constructible_impl'/>
<size>1</size>
<doc f='include/c++/4.9/type_traits' l='893'>// Implementation for non-reference types. To meet the proper
  // variable definition semantics, we also need to test for
  // is_destructible in this case.
  // This form should be simplified by a single expression:
  // ::delete ::new _Tp(declval&lt;_Arg&gt;()), see c++/51222.</doc>
<fun r='_ZNSt33__do_is_direct_constructible_impl6__testEi'/>
<fun r='_ZNSt33__do_is_direct_constructible_impl6__testEz'/>
