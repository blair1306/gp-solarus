<dec f='include/physfs.h' l='880' type='int PHYSFS_setSaneConfig(const char * organization, const char * appName, const char * archiveExt, int includeCdRoms, int archivesFirst)'/>
<doc f='include/physfs.h' l='823'>/**
 * \fn int PHYSFS_setSaneConfig(const char *organization, const char *appName, const char *archiveExt, int includeCdRoms, int archivesFirst)
 * \brief Set up sane, default paths.
 *
 * Helper function.
 *
 * The write dir will be set to &quot;userdir/.organization/appName&quot;, which is
 *  created if it doesn&apos;t exist.
 *
 * The above is sufficient to make sure your program&apos;s configuration directory
 *  is separated from other clutter, and platform-independent. The period
 *  before &quot;mygame&quot; even hides the directory on Unix systems.
 *
 *  The search path will be:
 *
 *    - The Write Dir (created if it doesn&apos;t exist)
 *    - The Base Dir (PHYSFS_getBaseDir())
 *    - All found CD-ROM dirs (optionally)
 *
 * These directories are then searched for files ending with the extension
 *  (archiveExt), which, if they are valid and supported archives, will also
 *  be added to the search path. If you specified &quot;PKG&quot; for (archiveExt), and
 *  there&apos;s a file named data.PKG in the base dir, it&apos;ll be checked. Archives
 *  can either be appended or prepended to the search path in alphabetical
 *  order, regardless of which directories they were found in.
 *
 * All of this can be accomplished from the application, but this just does it
 *  all for you. Feel free to add more to the search path manually, too.
 *
 *    \param organization Name of your company/group/etc to be used as a
 *                         dirname, so keep it small, and no-frills.
 *
 *    \param appName Program-specific name of your program, to separate it
 *                   from other programs using PhysicsFS.
 *
 *    \param archiveExt File extension used by your program to specify an
 *                      archive. For example, Quake 3 uses &quot;pk3&quot;, even though
 *                      they are just zipfiles. Specify NULL to not dig out
 *                      archives automatically. Do not specify the &apos;.&apos; char;
 *                      If you want to look for ZIP files, specify &quot;ZIP&quot; and
 *                      not &quot;.ZIP&quot; ... the archive search is case-insensitive.
 *
 *    \param includeCdRoms Non-zero to include CD-ROMs in the search path, and
 *                         (if (archiveExt) != NULL) search them for archives.
 *                         This may cause a significant amount of blocking
 *                         while discs are accessed, and if there are no discs
 *                         in the drive (or even not mounted on Unix systems),
 *                         then they may not be made available anyhow. You may
 *                         want to specify zero and handle the disc setup
 *                         yourself.
 *
 *    \param archivesFirst Non-zero to prepend the archives to the search path.
 *                          Zero to append them. Ignored if !(archiveExt).
 *
 *  \return nonzero on success, zero on error. Specifics of the error can be
 *          gleaned from PHYSFS_getLastError().
 */</doc>
